THREE.TrailRenderer=function(e,t){THREE.Object3D.call(this),this.active=!1,this.orientToMovement=!1,t&&(this.orientToMovement=!0),this.scene=e,this.geometry=null,this.mesh=null,this.nodeCenters=null,this.lastNodeCenter=null,this.currentNodeCenter=null,this.lastOrientationDir=null,this.nodeIDs=null,this.currentLength=0,this.currentEnd=0,this.currentNodeID=0},THREE.TrailRenderer.prototype=Object.create(THREE.Object3D.prototype),THREE.TrailRenderer.prototype.constructor=THREE.TrailRenderer,THREE.TrailRenderer.MaxHeadVertices=128,THREE.TrailRenderer.LocalOrientationTangent=new THREE.Vector3(1,0,0),THREE.TrailRenderer.LocalOrientationDirection=new THREE.Vector3(0,0,-1),THREE.TrailRenderer.LocalHeadOrigin=new THREE.Vector3(0,0,0),THREE.TrailRenderer.PositionComponentCount=3,THREE.TrailRenderer.UVComponentCount=2,THREE.TrailRenderer.IndicesPerFace=3,THREE.TrailRenderer.FacesPerQuad=2,THREE.TrailRenderer.Shader={},THREE.TrailRenderer.Shader.BaseVertexVars=["attribute float nodeID;","attribute float nodeVertexID;","attribute vec3 nodeCenter;","uniform float minID;","uniform float maxID;","uniform float trailLength;","uniform float maxTrailLength;","uniform float verticesPerNode;","uniform vec2 textureTileFactor;","uniform vec4 headColor;","uniform vec4 tailColor;","varying vec4 vColor;"].join("\n"),THREE.TrailRenderer.Shader.TexturedVertexVars=[THREE.TrailRenderer.Shader.BaseVertexVars,"varying vec2 vUV;","uniform float dragTexture;"].join("\n"),THREE.TrailRenderer.Shader.BaseFragmentVars=["varying vec4 vColor;","uniform sampler2D texture;"].join("\n"),THREE.TrailRenderer.Shader.TexturedFragmentVars=[THREE.TrailRenderer.Shader.BaseFragmentVars,"varying vec2 vUV;"].join("\n"),THREE.TrailRenderer.Shader.VertexShaderCore=["float fraction = ( maxID - nodeID ) / ( maxID - minID );","vColor = ( 1.0 - fraction ) * headColor + fraction * tailColor;","vec4 realPosition = vec4( ( 1.0 - fraction ) * position.xyz + fraction * nodeCenter.xyz, 1.0 ); "].join("\n"),THREE.TrailRenderer.Shader.BaseVertexShader=[THREE.TrailRenderer.Shader.BaseVertexVars,"void main() { ",THREE.TrailRenderer.Shader.VertexShaderCore,"gl_Position = projectionMatrix * viewMatrix * realPosition;","}"].join("\n"),THREE.TrailRenderer.Shader.BaseFragmentShader=[THREE.TrailRenderer.Shader.BaseFragmentVars,"void main() { ","gl_FragColor = vColor;","}"].join("\n"),THREE.TrailRenderer.Shader.TexturedVertexShader=[THREE.TrailRenderer.Shader.TexturedVertexVars,"void main() { ",THREE.TrailRenderer.Shader.VertexShaderCore,"float s = 0.0;","float t = 0.0;","if ( dragTexture == 1.0 ) { ","   s = fraction *  textureTileFactor.s; "," \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;","} else { ","\ts = nodeID / maxTrailLength * textureTileFactor.s;"," \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;","}","vUV = vec2( s, t ); ","gl_Position = projectionMatrix * viewMatrix * realPosition;","}"].join("\n"),THREE.TrailRenderer.Shader.TexturedFragmentShader=[THREE.TrailRenderer.Shader.TexturedFragmentVars,"void main() { ","vec4 textureColor = texture2D( texture, vUV );","gl_FragColor = vColor * textureColor;","}"].join("\n"),THREE.TrailRenderer.createMaterial=function(e,t,r){return r=r||{},r.trailLength={type:"f",value:null},r.verticesPerNode={type:"f",value:null},r.minID={type:"f",value:null},r.maxID={type:"f",value:null},r.dragTexture={type:"f",value:null},r.maxTrailLength={type:"f",value:null},r.textureTileFactor={type:"v2",value:null},r.headColor={type:"v4",value:new THREE.Vector4},r.tailColor={type:"v4",value:new THREE.Vector4},e=e||THREE.TrailRenderer.Shader.BaseVertexShader,t=t||THREE.TrailRenderer.Shader.BaseFragmentShader,new THREE.ShaderMaterial({uniforms:r,vertexShader:e,fragmentShader:t,transparent:!0,alphaTest:.5,blending:THREE.CustomBlending,blendSrc:THREE.SrcAlphaFactor,blendDst:THREE.OneMinusSrcAlphaFactor,blendEquation:THREE.AddEquation,depthTest:!0,depthWrite:!1,side:THREE.DoubleSide})},THREE.TrailRenderer.createBaseMaterial=function(e){return this.createMaterial(THREE.TrailRenderer.Shader.BaseVertexShader,THREE.TrailRenderer.Shader.BaseFragmentShader,e)},THREE.TrailRenderer.createTexturedMaterial=function(e){return e={},e.texture={type:"t",value:null},this.createMaterial(THREE.TrailRenderer.Shader.TexturedVertexShader,THREE.TrailRenderer.Shader.TexturedFragmentShader,e)},THREE.TrailRenderer.prototype.initialize=function(e,t,r,i,n,a){this.deactivate(),this.destroyMesh(),this.length=t>0?t+1:0,this.dragTexture=r?1:0,this.targetObject=a,this.initializeLocalHeadGeometry(i,n),this.nodeIDs=[],this.nodeCenters=[];for(var o=0;o<this.length;o++)this.nodeIDs[o]=-1,this.nodeCenters[o]=new THREE.Vector3;this.material=e,this.initializeGeometry(),this.initializeMesh(),this.material.uniforms.trailLength.value=0,this.material.uniforms.minID.value=0,this.material.uniforms.maxID.value=0,this.material.uniforms.dragTexture.value=this.dragTexture,this.material.uniforms.maxTrailLength.value=this.length,this.material.uniforms.verticesPerNode.value=this.VerticesPerNode,this.material.uniforms.textureTileFactor.value=new THREE.Vector2(1,1),this.reset()},THREE.TrailRenderer.prototype.initializeLocalHeadGeometry=function(e,t){if(this.localHeadGeometry=[],t){this.VerticesPerNode=0;for(var r=0;r<t.length&&r<THREE.TrailRenderer.MaxHeadVertices;r++){var i=t[r];if(i&&i instanceof THREE.Vector3){var n=new THREE.Vector3;n.copy(i),this.localHeadGeometry.push(n),this.VerticesPerNode++}}}else{var a=e||1;a/=2,this.localHeadGeometry.push(new THREE.Vector3(-a,0,0)),this.localHeadGeometry.push(new THREE.Vector3(a,0,0)),this.VerticesPerNode=2}this.FacesPerNode=2*(this.VerticesPerNode-1),this.FaceIndicesPerNode=3*this.FacesPerNode},THREE.TrailRenderer.prototype.initializeGeometry=function(){this.vertexCount=this.length*this.VerticesPerNode,this.faceCount=this.length*this.FacesPerNode;var e=new THREE.BufferGeometry,t=new Float32Array(this.vertexCount),r=new Float32Array(this.vertexCount*this.VerticesPerNode),i=new Float32Array(this.vertexCount*THREE.TrailRenderer.PositionComponentCount),n=new Float32Array(this.vertexCount*THREE.TrailRenderer.PositionComponentCount),a=new Float32Array(this.vertexCount*THREE.TrailRenderer.UVComponentCount),o=new Uint32Array(this.faceCount*THREE.TrailRenderer.IndicesPerFace),s=new THREE.BufferAttribute(t,1);s.setDynamic(!0),e.setAttribute("nodeID",s);var d=new THREE.BufferAttribute(r,1);d.setDynamic(!0),e.setAttribute("nodeVertexID",d);var l=new THREE.BufferAttribute(n,THREE.TrailRenderer.PositionComponentCount);l.setDynamic(!0),e.setAttribute("nodeCenter",l);var h=new THREE.BufferAttribute(i,THREE.TrailRenderer.PositionComponentCount);h.setDynamic(!0),e.setAttribute("position",h);var c=new THREE.BufferAttribute(a,THREE.TrailRenderer.UVComponentCount);c.setDynamic(!0),e.setAttribute("uv",c);var u=new THREE.BufferAttribute(o,1);u.setDynamic(!0),e.setIndex(u),this.geometry=e},THREE.TrailRenderer.prototype.zeroVertices=function(){for(var e=this.geometry.getAttribute("position"),t=0;t<this.vertexCount;t++){var r=3*t;e.array[r]=0,e.array[r+1]=0,e.array[r+2]=0}e.needsUpdate=!0,e.updateRange.count=-1},THREE.TrailRenderer.prototype.zeroIndices=function(){for(var e=this.geometry.getIndex(),t=0;t<this.faceCount;t++){var r=3*t;e.array[r]=0,e.array[r+1]=0,e.array[r+2]=0}e.needsUpdate=!0,e.updateRange.count=-1},THREE.TrailRenderer.prototype.formInitialFaces=function(){this.zeroIndices();for(var e=this.geometry.getIndex(),t=0;t<this.length-1;t++)this.connectNodes(t,t+1);e.needsUpdate=!0,e.updateRange.count=-1},THREE.TrailRenderer.prototype.initializeMesh=function(){this.mesh=new THREE.Mesh(this.geometry,this.material),this.mesh.dynamic=!0,this.mesh.matrixAutoUpdate=!1},THREE.TrailRenderer.prototype.destroyMesh=function(){this.mesh&&(this.scene.remove(this.mesh),this.mesh=null)},THREE.TrailRenderer.prototype.reset=function(){this.currentLength=0,this.currentEnd=-1,this.lastNodeCenter=null,this.currentNodeCenter=null,this.lastOrientationDir=null,this.currentNodeID=0,this.formInitialFaces(),this.zeroVertices(),this.geometry.setDrawRange(0,0)},THREE.TrailRenderer.prototype.updateUniforms=function(){this.currentLength<this.length?this.material.uniforms.minID.value=0:this.material.uniforms.minID.value=this.currentNodeID-this.length,this.material.uniforms.maxID.value=this.currentNodeID,this.material.uniforms.trailLength.value=this.currentLength,this.material.uniforms.maxTrailLength.value=this.length,this.material.uniforms.verticesPerNode.value=this.VerticesPerNode},THREE.TrailRenderer.prototype.advance=function(){new THREE.Vector3,new THREE.Vector3,new THREE.Vector3;var e=new THREE.Matrix4;return function(){this.targetObject.updateMatrixWorld(),e.copy(this.targetObject.matrixWorld),this.advanceWithTransform(e),this.updateUniforms()}}(),THREE.TrailRenderer.prototype.advanceWithPositionAndOrientation=function(e,t){this.advanceGeometry({position:e,tangent:t},null)},THREE.TrailRenderer.prototype.advanceWithTransform=function(e){this.advanceGeometry(null,e)},THREE.TrailRenderer.prototype.advanceGeometry=function(){new THREE.Vector3,new THREE.Vector3;return function(e,t){var r=this.currentEnd+1>=this.length?0:this.currentEnd+1;if(t?this.updateNodePositionsFromTransformMatrix(r,t):this.updateNodePositionsFromOrientationTangent(r,e.position,e.tangent),this.currentLength>=1){this.connectNodes(this.currentEnd,r);if(this.currentLength>=this.length){var i=this.currentEnd+1>=this.length?0:this.currentEnd+1;this.disconnectNodes(i)}}this.currentLength<this.length&&this.currentLength++,this.currentEnd++,this.currentEnd>=this.length&&(this.currentEnd=0),this.currentLength>=1&&(this.currentLength<this.length?this.geometry.setDrawRange(0,(this.currentLength-1)*this.FaceIndicesPerNode):this.geometry.setDrawRange(0,this.currentLength*this.FaceIndicesPerNode)),this.updateNodeID(this.currentEnd,this.currentNodeID),this.currentNodeID++}}(),THREE.TrailRenderer.prototype.updateHead=function(){var e=new THREE.Matrix4;return function(){this.currentEnd<0||(this.targetObject.updateMatrixWorld(),e.copy(this.targetObject.matrixWorld),this.updateNodePositionsFromTransformMatrix(this.currentEnd,e))}}(),THREE.TrailRenderer.prototype.updateNodeID=function(e,t){this.nodeIDs[e]=t;for(var r=this.geometry.getAttribute("nodeID"),i=this.geometry.getAttribute("nodeVertexID"),n=0;n<this.VerticesPerNode;n++){var a=e*this.VerticesPerNode+n;r.array[a]=t,i.array[a]=n}r.needsUpdate=!0,i.needsUpdate=!0,r.updateRange.offset=e*this.VerticesPerNode,r.updateRange.count=this.VerticesPerNode,i.updateRange.offset=e*this.VerticesPerNode,i.updateRange.count=this.VerticesPerNode},THREE.TrailRenderer.prototype.updateNodeCenter=function(e,t){this.lastNodeCenter=this.currentNodeCenter,this.currentNodeCenter=this.nodeCenters[e],this.currentNodeCenter.copy(t);for(var r=this.geometry.getAttribute("nodeCenter"),i=0;i<this.VerticesPerNode;i++){var n=3*(e*this.VerticesPerNode+i);r.array[n]=t.x,r.array[n+1]=t.y,r.array[n+2]=t.z}r.needsUpdate=!0,r.updateRange.offset=e*this.VerticesPerNode*THREE.TrailRenderer.PositionComponentCount,r.updateRange.count=this.VerticesPerNode*THREE.TrailRenderer.PositionComponentCount},THREE.TrailRenderer.prototype.updateNodePositionsFromOrientationTangent=function(){new THREE.Matrix4;for(var e=new THREE.Quaternion,t=new THREE.Vector3,r=[],i=0;i<THREE.TrailRenderer.MaxHeadVertices;i++){var n=new THREE.Vector3;r.push(n)}return function(i,n,a){var o=this.geometry.getAttribute("position");this.updateNodeCenter(i,n),t.copy(n),t.sub(THREE.TrailRenderer.LocalHeadOrigin),e.setFromUnitVectors(THREE.TrailRenderer.LocalOrientationTangent,a);for(var s=0;s<this.localHeadGeometry.length;s++){var d=r[s];d.copy(this.localHeadGeometry[s]),d.applyQuaternion(e),d.add(t)}for(s=0;s<this.localHeadGeometry.length;s++){var l=(this.VerticesPerNode*i+s)*THREE.TrailRenderer.PositionComponentCount,h=r[s];o.array[l]=h.x,o.array[l+1]=h.y,o.array[l+2]=h.z}o.needsUpdate=!0}}(),THREE.TrailRenderer.prototype.updateNodePositionsFromTransformMatrix=function(){function e(e,t){var r=t.elements;e.set(r[0],r[1],r[2],r[4],r[5],r[6],r[8],r[9],r[10])}new THREE.Matrix4;for(var t=new THREE.Matrix3,r=new THREE.Quaternion,i=new THREE.Vector3,n=new THREE.Vector3,a=new THREE.Vector3,o=new THREE.Vector3,s=[],d=0;d<THREE.TrailRenderer.MaxHeadVertices;d++){var l=new THREE.Vector3;s.push(l)}return function(d,l){var h=this.geometry.getAttribute("position");i.set(0,0,0),i.applyMatrix4(l),this.updateNodeCenter(d,i);for(var c=0;c<this.localHeadGeometry.length;c++){var u=s[c];u.copy(this.localHeadGeometry[c])}for(c=0;c<this.localHeadGeometry.length;c++){u=s[c];u.applyMatrix4(l)}if(this.lastNodeCenter&&this.orientToMovement&&(e(t,l),a.set(0,0,-1),a.applyMatrix3(t),o.copy(this.currentNodeCenter),o.sub(this.lastNodeCenter),o.normalize(),o.lengthSq()<=1e-4&&this.lastOrientationDir&&o.copy(this.lastOrientationDir),o.lengthSq()>1e-4)){this.lastOrientationDir||(this.lastOrientationDir=new THREE.Vector3),r.setFromUnitVectors(a,o),n.copy(this.currentNodeCenter);for(c=0;c<this.localHeadGeometry.length;c++){u=s[c];u.sub(n),u.applyQuaternion(r),u.add(n)}}for(c=0;c<this.localHeadGeometry.length;c++){var E=(this.VerticesPerNode*d+c)*THREE.TrailRenderer.PositionComponentCount,T=s[c];h.array[E]=T.x,h.array[E+1]=T.y,h.array[E+2]=T.z}h.needsUpdate=!0,h.updateRange.offset=d*this.VerticesPerNode*THREE.TrailRenderer.PositionComponentCount,h.updateRange.count=this.VerticesPerNode*THREE.TrailRenderer.PositionComponentCount}}(),THREE.TrailRenderer.prototype.connectNodes=function(){var e={attribute:null,offset:0,count:-1};return function(t,r){for(var i=this.geometry.getIndex(),n=0;n<this.localHeadGeometry.length-1;n++){var a=this.VerticesPerNode*t+n,o=this.VerticesPerNode*r+n,s=(t*this.FacesPerNode+n*THREE.TrailRenderer.FacesPerQuad)*THREE.TrailRenderer.IndicesPerFace;i.array[s]=a,i.array[s+1]=o,i.array[s+2]=a+1,i.array[s+3]=o,i.array[s+4]=o+1,i.array[s+5]=a+1}return i.needsUpdate=!0,i.updateRange.count=-1,e.attribute=i,e.offset=t*this.FacesPerNode*THREE.TrailRenderer.IndicesPerFace,e.count=this.FacesPerNode*THREE.TrailRenderer.IndicesPerFace,e}}(),THREE.TrailRenderer.prototype.disconnectNodes=function(e){var t={attribute:null,offset:0,count:-1};return function(e){for(var r=this.geometry.getIndex(),i=0;i<this.localHeadGeometry.length-1;i++){this.VerticesPerNode;var n=(e*this.FacesPerNode+i*THREE.TrailRenderer.FacesPerQuad)*THREE.TrailRenderer.IndicesPerFace;r.array[n]=0,r.array[n+1]=0,r.array[n+2]=0,r.array[n+3]=0,r.array[n+4]=0,r.array[n+5]=0}return r.needsUpdate=!0,r.updateRange.count=-1,t.attribute=r,t.offset=e*this.FacesPerNode*THREE.TrailRenderer.IndicesPerFace,t.count=this.FacesPerNode*THREE.TrailRenderer.IndicesPerFace,t}}(),THREE.TrailRenderer.prototype.deactivate=function(){this.isActive&&(this.scene.remove(this.mesh),this.isActive=!1)},THREE.TrailRenderer.prototype.activate=function(){this.isActive||(this.scene.add(this.mesh),this.isActive=!0)};
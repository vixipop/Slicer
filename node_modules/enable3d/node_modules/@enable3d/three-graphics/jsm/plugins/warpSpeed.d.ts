import { AmbientLight, DirectionalLight, HemisphereLight, OrthographicCamera, PerspectiveCamera, Scene, WebGLRenderer } from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';
import { Factories, Lights, Loaders } from '.';
import { AmmoPhysics, ExtendedObject3D } from '@enable3d/ammo-physics';
export interface WarpSpeedOptions {
    camera?: PerspectiveCamera | OrthographicCamera | undefined;
    lights?: {
        ambientLight: AmbientLight;
        directionalLight: DirectionalLight;
        hemisphereLight: HemisphereLight;
    } | undefined;
    ground?: ExtendedObject3D | undefined;
    orbitControls?: OrbitControls | undefined;
}
export type WarpedStartFeatures = 'light' | 'camera' | 'lookAtCenter' | 'ground' | 'grid' | 'orbitControls' | 'fog' | 'sky' | '-light' | '-camera' | '-lookAtCenter' | '-ground' | '-grid' | '-orbitControls' | '-fog' | '-sky';
export default class WarpSpeed {
    private scene;
    private renderer;
    private camera;
    private lights;
    private physics;
    private load;
    private factories;
    constructor(scene: Scene, renderer: WebGLRenderer, camera: PerspectiveCamera | OrthographicCamera, lights: Lights, physics: AmmoPhysics, load: Loaders, factories: Factories);
    /**
     * It takes took long to setup the third dimension your self? Get started with warp speed by using this function.
     * @param features Pass the features you want to setup.
     */
    warpSpeed(...features: WarpedStartFeatures[]): Promise<WarpSpeedOptions>;
}
//# sourceMappingURL=warpSpeed.d.ts.map
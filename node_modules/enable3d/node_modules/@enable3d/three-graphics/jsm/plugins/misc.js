// misc
import { addWater } from './water';
import { RepeatWrapping } from 'three';
import { logger } from '@enable3d/common/dist/logger';
export default class Misc {
    constructor(scene, renderer, factories) {
        this.scene = scene;
        this.renderer = renderer;
        this.factories = factories;
    }
    water(config = {}) {
        addWater(this.scene, this.renderer, config);
    }
    textureCube(textures) {
        if (textures.length !== 6) {
            logger('You need to pass 6 urls to textureCube()');
        }
        const textureCube = new TextureCube();
        textures.forEach((texture, i) => {
            texture.wrapS = texture.wrapT = RepeatWrapping;
            const material = this.factories.add.material({ phong: { map: texture } });
            textureCube.materials[i] = material;
        });
        return textureCube;
    }
}
export class TextureCube {
    constructor() {
        this.materials = new Array(6);
    }
    get texture() {
        return {
            left: this.getTexture(0),
            right: this.getTexture(1),
            up: this.getTexture(2),
            down: this.getTexture(3),
            front: this.getTexture(4),
            back: this.getTexture(5)
        };
    }
    getTexture(i) {
        // @ts-expect-error: Seems to me like a three.js type error.
        return this.materials[i].map;
    }
}
//# sourceMappingURL=misc.js.map
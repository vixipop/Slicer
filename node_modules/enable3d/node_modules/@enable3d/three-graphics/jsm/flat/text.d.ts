/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|LGPL-3.0}
 */
import { Texture } from 'three';
import { SimpleSprite } from './simpleSprite';
export interface TextStyles {
    align?: 'center' | 'left' | 'right';
    background?: string | CanvasGradient | CanvasPattern;
    baseline?: CanvasTextBaseline;
    borderColor?: string;
    borderRadius?: number;
    borderWidth?: number;
    fillStyle?: string | CanvasGradient | CanvasPattern;
    fontFamily?: string;
    fontSize?: number;
    fontWeight?: string;
    lineHeight?: number;
    lineWidth?: number;
    offset?: {
        x?: number;
        y?: number;
    };
    padding?: number | {
        x?: number;
        y?: number;
    };
    strokeStyle?: string | CanvasGradient | CanvasPattern;
}
export declare class TextTexture extends Texture {
    private _text;
    private _styles;
    private _image;
    width: number;
    height: number;
    getText(): string;
    getStyles(): TextStyles;
    clone(): this;
    copy(source: this): this;
    constructor(text: string, styles?: TextStyles);
}
export declare class TextSprite extends SimpleSprite {
    private _text;
    private _styles;
    constructor(texture: TextTexture);
    getText(): string;
    getStyles(): TextStyles;
    setStyles(styles: TextStyles): void;
    setText(text: string): void;
    _update(): void;
}
//# sourceMappingURL=text.d.ts.map